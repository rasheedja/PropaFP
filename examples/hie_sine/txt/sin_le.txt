Bounds on variables: 
finalresult1 (Real) in [-1, 1]
o (Real) in [-802, 802]
r1 (Integer) in [0, 511]
result__1 (Real) in [-1, 1]
x (Real) in [-802, 802]
y (Real) in [-6851933 / 8388608, 6851933 / 8388608]

exact NVC: 
IMPL
  x < 0
  ===========>
  (-1 * x) == o

IMPL
  NOT
    x < 0
  ===========>
  x == o

((-1 * 500000001) * (1 / 1000000000)) <= (((o / 13176795 / 8388608) + (-1 * r1)) + 433681 / 2000000000000000000000000)

(((o / 13176795 / 8388608) + (-1 * r1)) - 433681 / 2000000000000000000000000) <= (500000001 * (1 / 1000000000))

((-1 * 18) * (1 / 100000)) <= (y + (-1 * (o + (-1 * ((r1 * Pi) * (1 / 2))))))

(y + (-1 * (o + (-1 * ((r1 * Pi) * (1 / 2)))))) <= (18 * (1 / 100000))

(mod r1 4) <= 3

IMPL
  OR
    (mod r1 4) <= 0
    AND
      NOT
        (mod r1 4) <= 0
      2 == (mod r1 4)
  ===========>
  AND
    ((-1 * 58) * (1 / 1000000000)) <= (result__1 + (-1 * (sin y)))
    (result__1 + (-1 * (sin y))) <= (58 * (1 / 1000000000))

IMPL
  NOT
    IMPL
      NOT
        (mod r1 4) <= 0
      ===========>
      2 == (mod r1 4)
  ===========>
  AND
    ((-1 * 14) * (1 / 100000000)) <= (result__1 + (-1 * (cos y)))
    (result__1 + (-1 * (cos y))) <= (14 * (1 / 100000000))

IMPL
  x < 0
  ===========>
  AND
    IMPL
      2 <= (mod r1 4)
      ===========>
      result__1 == finalresult1
    IMPL
      NOT
        2 <= (mod r1 4)
      ===========>
      (-1 * result__1) == finalresult1

IMPL
  NOT
    x < 0
  ===========>
  AND
    IMPL
      2 <= (mod r1 4)
      ===========>
      (-1 * result__1) == finalresult1
    IMPL
      NOT
        2 <= (mod r1 4)
      ===========>
      result__1 == finalresult1

NOT
  (finalresult1 + (-1 * (sin x))) <= (19 * (1 / 100000))

